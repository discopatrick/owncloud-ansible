---
- name: put owncloud into maintenance mode
  become: yes
  become_user: www-data
  command: php occ maintenance:mode --on
  args:
    chdir: /var/www/owncloud/

- name: get server isodatetime
  command: date --iso-8601=seconds --utc
  register: isodatetime

- name: get epoch datetime
  command: date +%s
  register: epochdatetime

- name: create temp backup directory
  file:
    state: directory
    path: ~/owncloud-backup-{{ epochdatetime.stdout }}

- name: create sql dump
  # must use 'shell' module, as the command uses the '>' character to pass the output to a filename
  shell: mysqldump --lock-tables --host=localhost --user={{ mysql.user }} --password={{ mysql.password }} {{ mysql.database }} > ~/owncloud-backup-{{ epochdatetime.stdout }}/owncloud.sql

- name: copy config folder
  synchronize:
    src: /var/www/owncloud/config
    dest: /home/vagrant/owncloud-backup-{{ epochdatetime.stdout }}/
    owner: no
    group: no
  delegate_to: 192.168.33.99

- name: copy data folder
  synchronize:
    src: /var/www/owncloud/data
    dest: /home/vagrant/owncloud-backup-{{ epochdatetime.stdout }}/
    owner: no
    group: no
  delegate_to: 192.168.33.99

- name: tar and gzip
  # has to be shell to work - best guess is that chdir doesn't work with command... although I think I've used it elsewhere...
  shell: tar -czvf ./owncloud-backup-{{ isodatetime.stdout }}.tar.gz ./*
  args:
    chdir: ~/owncloud-backup-{{ epochdatetime.stdout }}

- name: copy backup to aws
  command: "aws s3 cp ./owncloud-backup-{{ isodatetime.stdout }}.tar.gz s3://discopatrick-owncloud-backups/"
  args:
    chdir: ~/owncloud-backup-{{ epochdatetime.stdout }}

- name: delete the backup folder
  file:
    state: absent
    path: ~/owncloud-backup-{{ epochdatetime.stdout }}

- name: take owncloud out of maintenance mode
  become: yes
  become_user: www-data
  command: php occ maintenance:mode --off
  args:
    chdir: /var/www/owncloud/
